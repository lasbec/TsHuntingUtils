"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const type_testing_1 = require("../../src/typeCalculus/type-testing");
describe("Multiply true numbers", () => {
    describe("Mul type", () => {
        it("Q", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
        it("Q0", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
        it("Q_Pos", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
        it("Q_Neg", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
        it("Q0_Pos", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
        it("Q0_Neg", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
        it("Z", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
        it("Z0", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
        it("Z_Pos", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
        it("Z_Neg", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
        it("Z0_Pos", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
        it("Z0_Neg", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
        it("Zero", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
        it("EmptyNumberSet", () => {
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
            (0, type_testing_1.typeAssertEq)(true);
        });
    });
});
